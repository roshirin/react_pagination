{"version":3,"sources":["components/PageLink/PageLink.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["PageLink","page","onClick","className","href","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","Array","from","length","_","index","classNames","disabled","map","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","pageFirstItem","nextPageFirstItem","shownItems","slice","id","value","onChange","event","Number","target","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"oNAKaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,KACAC,EAFuC,EAEvCA,QAFuC,OAIvC,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAI,WAAMH,GACVC,QAASA,EAJX,SAMGD,KCLQI,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQC,MAAMC,KAClB,CAAEC,OAAQN,IACV,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAexB,OACE,qBAAIf,UAAU,aAAd,UACE,oBACEA,UAAWgB,IACT,YACA,CAAEC,SAA0B,IAAhBZ,IAHhB,SAME,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBI,EACfN,QAzBc,WAChBM,EAAc,GAChBC,EAAaD,EAAc,IAkBzB,oBAUDK,EAAMQ,KAAI,SAAApB,GAAI,OACb,oBACEE,UAAWgB,IACT,YACA,CAAEG,OAAQrB,IAASO,IAHvB,SAOE,cAAC,EAAD,CACEP,KAAMA,EACNC,QAAS,kBAAMO,EAAaR,OAJzBA,MAQT,oBACEE,UAAWgB,IACT,YACA,CAAEC,SAAUZ,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRP,UAAU,YACVC,KAAK,QACL,gBAAeI,IAAgBE,EAC/BR,QAjDc,WAChBM,EAAcE,GAChBD,EAAaD,EAAc,IA0CzB,wBCnEFe,ECLC,SAAoBR,EAAcS,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIX,EAAMW,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBwB,EAApB,KAEMC,GAAiBzB,EAAc,GAAKD,EACpC2B,EAAoBX,EAAMf,EAAcD,GAC1CC,EAAcD,EACdgB,EAAMP,OACJmB,EAAaZ,EAAMa,MAAMH,EAAeC,GAW9C,OACE,sBAAK/B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWK,EADX,mBACiCyB,EAAgB,EADjD,cACwDC,EADxD,eACgFX,EAAMP,OADtF,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkC,GAAG,kBACHlC,UAAU,eACVmC,MAAO/B,EACPgC,SAxBkB,SAACC,GAC3BT,EAAWU,OAAOD,EAAME,OAAOJ,QAC/BN,EAAe,IAiBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEG,MAAOiB,EAAMP,OACbT,QAASA,EACTC,YAAaA,EACbC,aArCmB,SAACmC,GACxBZ,EAAeY,MAuCb,6BACGT,EAAWd,KAAI,SAAAwB,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAAoBA,aE9D9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f7339cce.chunk.js","sourcesContent":["type Props = {\n  page: number;\n  onClick: () => void;\n};\n\nexport const PageLink: React.FC<Props> = ({\n  page,\n  onClick,\n}) => (\n  <a\n    data-cy=\"pageLink\"\n    className=\"page-link\"\n    href={`#${page}`}\n    onClick={onClick}\n  >\n    {page}\n  </a>\n);\n","import classNames from 'classnames';\nimport { PageLink } from '../PageLink/PageLink';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = Array.from(\n    { length: pagesCount },\n    (_, index) => index + 1,\n  );\n\n  const hanlePrevPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const hanleNextPage = () => {\n    if (currentPage < pagesCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={hanlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <PageLink\n            page={page}\n            onClick={() => onPageChange(page)}\n          />\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pagesCount },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesCount}\n          onClick={hanleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageFirstItem = (currentPage - 1) * perPage;\n  const nextPageFirstItem = items[currentPage * perPage]\n    ? currentPage * perPage\n    : items.length;\n  const shownItems = items.slice(pageFirstItem, nextPageFirstItem);\n\n  const handlePerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${pageFirstItem + 1} - ${nextPageFirstItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {shownItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}